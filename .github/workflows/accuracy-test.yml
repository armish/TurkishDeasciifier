name: Accuracy Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run accuracy tests daily at 02:00 UTC
    - cron: '0 2 * * *'

jobs:
  accuracy-test:
    name: Algorithm Accuracy Verification
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build application
      run: |
        # Build using the direct method for reliability
        ./build_direct.sh
        
    - name: Run accuracy tests
      run: |
        echo "üîç Running accuracy verification tests..."
        
        # Test pattern loading with a temporary Swift file
        echo "Testing pattern file loading..."
        cat > test_patterns.swift << 'EOF'
        import Foundation
        
        do {
            let url = URL(fileURLWithPath: "Sources/turkish_patterns.json")
            let data = try Data(contentsOf: url)
            let json = try JSONSerialization.jsonObject(with: data) as? [String: [String: Int]]
            let patternCount = json?.values.reduce(0) { $0 + $1.count } ?? 0
            print("‚úÖ Loaded \(patternCount) patterns successfully")
            if patternCount < 10000 {
                print("‚ùå Pattern count too low: \(patternCount)")
                exit(1)
            }
        } catch {
            print("‚ùå Failed to load patterns: \(error)")
            exit(1)
        }
        EOF
        
        swift test_patterns.swift
        rm test_patterns.swift
        
        # Test basic executable functionality
        echo "Testing executable basic functionality..."
        if [ -f "TurkishDeasciifier" ]; then
            echo "‚úÖ Executable exists"
            # Test that it doesn't crash immediately
            timeout 10 ./TurkishDeasciifier --help 2>/dev/null || echo "‚úÖ App launches (help not available)"
        else
            echo "‚ùå Executable not found"
            exit 1
        fi
        
        # Test pattern file size and format
        echo "Testing pattern file format..."
        if [ -f "Sources/turkish_patterns.json" ]; then
            size=$(wc -c < Sources/turkish_patterns.json)
            echo "‚úÖ Pattern file size: $size bytes"
            if [ $size -lt 100000 ]; then
                echo "‚ùå Pattern file too small"
                exit 1
            fi
            
            # Check if it's valid JSON
            if python3 -m json.tool Sources/turkish_patterns.json > /dev/null 2>&1; then
                echo "‚úÖ Pattern file is valid JSON"
            else
                echo "‚ùå Pattern file is not valid JSON"
                exit 1
            fi
        else
            echo "‚ùå Pattern file not found"
            exit 1
        fi
        
        echo "‚úÖ Core algorithm tests completed"
        
    - name: Performance test
      run: |
        echo "üöÄ Running performance tests..."
        
        # Test that app can handle reasonable text input
        echo "Testing performance with sample text..."
        
        # Create test input
        test_input="Turkiye Cumhuriyeti Anadolu ve Dogu Trakya bolgesinde yer alan ulkedir"
        echo "Input length: ${#test_input} characters"
        
        # Test that the app doesn't hang or crash
        echo "Testing app responsiveness..."
        if timeout 30 bash -c 'echo "test" | ./TurkishDeasciifier >/dev/null 2>&1'; then
            echo "‚úÖ App responds within timeout"
        else
            echo "‚ö†Ô∏è App may be unresponsive or GUI-only"
        fi
        
        echo "‚úÖ Performance tests completed"